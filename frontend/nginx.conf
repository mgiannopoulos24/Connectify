# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host:8443$request_uri;
}

# Serve the application over HTTPS
server {
    listen 443 ssl;
    server_name localhost;

    # SSL Certificate Configuration
    ssl_certificate /etc/ssl/certs/selfsigned_cert.pem;
    ssl_certificate_key /etc/ssl/private/selfsigned_key.pem;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests
    location /api {
        proxy_pass https://backend:4000;
        proxy_ssl_verify off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy uploads
    location /uploads {
        proxy_pass https://backend:4000;
        proxy_ssl_verify off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy
    location /socket {
        proxy_pass https://backend:4000;
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}