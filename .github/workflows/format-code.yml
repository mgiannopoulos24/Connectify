name: Format Code
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  format-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        id: format-check
        run: npm run format:check
        continue-on-error: true

      - name: Format code if needed
        if: steps.format-check.outcome == 'failure'
        run: npm run format

      - name: Check for changes
        if: steps.format-check.outcome == 'failure'
        id: git-check
        run: |
          if git diff --exit-code; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatted code
        if: steps.format-check.outcome == 'failure' && steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "style: Prettier formatted the code."
          git push

  format-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: '1.17.3'
          otp-version: '27.0'

      - name: Install Hex and Rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        id: format-check
        run: mix format --check-formatted
        continue-on-error: true

      - name: Format code if needed
        if: steps.format-check.outcome == 'failure'
        run: mix format

      - name: Check for changes
        if: steps.format-check.outcome == 'failure'
        id: git-check
        run: |
          if git diff --exit-code; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatted code
        if: steps.format-check.outcome == 'failure' && steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "style: Mix formatted the code."
          git push

